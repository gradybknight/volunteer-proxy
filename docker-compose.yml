version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: volunteer-proxy-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: volunteer_proxy
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: volunteer-proxy-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/volunteer_proxy
      JWT_SECRET: development-secret-change-in-production
      PORT: 3000
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    container_name: volunteer-proxy-frontend
    environment:
      VITE_API_URL: http://localhost:3000/api
    ports:
      - "5173:80"
    depends_on:
      - backend

volumes:
  postgres-data:
